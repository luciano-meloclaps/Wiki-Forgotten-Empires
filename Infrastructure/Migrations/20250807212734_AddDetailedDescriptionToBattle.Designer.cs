// <auto-generated />
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250807212734_AddDetailedDescriptionToBattle")]
    partial class AddDetailedDescriptionToBattle
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("Domain.Entities.Age", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Overview")
                        .HasColumnType("TEXT");

                    b.Property<string>("Summary")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Ages");
                });

            modelBuilder.Entity("Domain.Entities.Battle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AgeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("DetailedDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Summary")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Territory")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AgeId");

                    b.ToTable("Battles");
                });

            modelBuilder.Entity("Domain.Entities.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AgeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CivilizationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Dynasty")
                        .HasColumnType("TEXT");

                    b.Property<string>("HonorificTitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("LifePeriod")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AgeId");

                    b.HasIndex("CivilizationId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Domain.Entities.Civilization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Territory")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Civilizations");
                });

            modelBuilder.Entity("Domain.Relations.CharacterBattle", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BattleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Outcome")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharacterId", "BattleId");

                    b.HasIndex("BattleId");

                    b.ToTable("CharacterBattles");
                });

            modelBuilder.Entity("Domain.Relations.CivilizationAge", b =>
                {
                    b.Property<int>("CivilizationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AgeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CivilizationId", "AgeId");

                    b.HasIndex("AgeId");

                    b.ToTable("CivilizationPeriods");
                });

            modelBuilder.Entity("Domain.Relations.CivilizationBattle", b =>
                {
                    b.Property<int>("CivilizationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BattleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CivilizationId", "BattleId");

                    b.HasIndex("BattleId");

                    b.ToTable("CivilizationBattles");
                });

            modelBuilder.Entity("Domain.Entities.Battle", b =>
                {
                    b.HasOne("Domain.Entities.Age", null)
                        .WithMany("Battles")
                        .HasForeignKey("AgeId");
                });

            modelBuilder.Entity("Domain.Entities.Character", b =>
                {
                    b.HasOne("Domain.Entities.Age", "Age")
                        .WithMany("Characters")
                        .HasForeignKey("AgeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Domain.Entities.Civilization", "Civilization")
                        .WithMany("Characters")
                        .HasForeignKey("CivilizationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Age");

                    b.Navigation("Civilization");
                });

            modelBuilder.Entity("Domain.Relations.CharacterBattle", b =>
                {
                    b.HasOne("Domain.Entities.Battle", "Battle")
                        .WithMany("Characters")
                        .HasForeignKey("BattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Character", "Character")
                        .WithMany("Battles")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Battle");

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Domain.Relations.CivilizationAge", b =>
                {
                    b.HasOne("Domain.Entities.Age", "Age")
                        .WithMany("Civilizations")
                        .HasForeignKey("AgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Civilization", "Civilization")
                        .WithMany("Periods")
                        .HasForeignKey("CivilizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Age");

                    b.Navigation("Civilization");
                });

            modelBuilder.Entity("Domain.Relations.CivilizationBattle", b =>
                {
                    b.HasOne("Domain.Entities.Battle", "Battle")
                        .WithMany("Civilizations")
                        .HasForeignKey("BattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Civilization", "Civilization")
                        .WithMany("Battles")
                        .HasForeignKey("CivilizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Battle");

                    b.Navigation("Civilization");
                });

            modelBuilder.Entity("Domain.Entities.Age", b =>
                {
                    b.Navigation("Battles");

                    b.Navigation("Characters");

                    b.Navigation("Civilizations");
                });

            modelBuilder.Entity("Domain.Entities.Battle", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("Civilizations");
                });

            modelBuilder.Entity("Domain.Entities.Character", b =>
                {
                    b.Navigation("Battles");
                });

            modelBuilder.Entity("Domain.Entities.Civilization", b =>
                {
                    b.Navigation("Battles");

                    b.Navigation("Characters");

                    b.Navigation("Periods");
                });
#pragma warning restore 612, 618
        }
    }
}
